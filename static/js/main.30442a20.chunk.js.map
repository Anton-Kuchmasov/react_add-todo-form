{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","utils/getUserById.ts","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","title","completed","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","PostForm","onSubmit","todoId","users","useState","selectedUserId","setSelectedUserId","hasUserIdError","sethasUserIdError","setTitle","hasTitleError","sethasTitleError","handleSubmit","event","preventDefault","trim","length","action","method","htmlFor","type","placeholder","value","onChange","target","disabled","defaultValue","todosToRender","App","setTodos","newTodo","Math","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30442a20.chunk.js","sourcesContent":["import { User } from '../../types/user';\n\ninterface Props {\n  user: User | null;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  if (!user) {\n    return null;\n  }\n\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../types/todo';\n\ninterface Props {\n  todo: Todo;\n}\nexport const TodoInfo = ({ todo }: Props) => {\n  const { id, title, user } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/user';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) as User;\n}\n","import { useState } from 'react';\nimport { Todo } from '../../types/todo';\n\nimport { User } from '../../types/user';\nimport { getUserById } from '../../utils/getUserById';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n  todoId: number;\n  users: User[];\n};\n\nexport const PostForm: React.FC<Props> = ({ onSubmit, todoId, users }) => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [hasUserIdError, sethasUserIdError] = useState(false);\n\n  const [title, setTitle] = useState('');\n  const [hasTitleError, sethasTitleError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    sethasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    sethasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!(title.trim())) {\n      sethasTitleError(true);\n    }\n\n    if (!selectedUserId) {\n      sethasUserIdError(true);\n    }\n\n    if (title.trim().length === 0 || !selectedUserId) {\n      return;\n    }\n\n    onSubmit({\n      id: todoId,\n      title,\n      completed: false,\n      userId: selectedUserId,\n      user: getUserById(selectedUserId),\n    });\n\n    reset();\n  };\n\n  return (\n    <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <label htmlFor=\"text-input\">Title:&nbsp;</label>\n        <input\n          type=\"text\"\n          id=\"text-input\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        {hasTitleError && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"select-list\">User:&nbsp;</label>\n        <select\n          data-cy=\"userSelect\"\n          id=\"select-list\"\n          value={selectedUserId}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\" disabled defaultValue=\"0\">\n            Choose a user\n          </option>\n\n          {users.map((user: User) => (\n            <option\n              key={user.id}\n              value={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\" onChange={handleSubmit}>\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { Todo } from './types/todo';\nimport { PostForm } from './components/TodoForm/TodoForm';\nimport { getUserById } from './utils/getUserById';\n\nconst todosToRender:Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosToRender);\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos([...todos, newTodo]);\n  };\n\n  const getIdOnTodo = () => {\n    if (todos.length === 0) {\n      return 1;\n    }\n\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    return maxId + 1;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <PostForm\n        onSubmit={addTodo}\n        todoId={getIdOnTodo()}\n        users={usersFromServer}\n      />\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}